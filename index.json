[{"content":"Introduction What is a Relational Database? A relational database is a collection of data stored in tables. Each table consists of one or more vertical columns and zero or more horizontal rows.\nTables are identified by name Table names must be unique within a database. Typical SQL databases allow up to 18 characters in a table name. The first character must be a letter, while the remaining characters can be letters, numbers, or underscores.\nColumns are identified by name Column names are unique within each table, but the same column name can appear in different tables. Both tables above, for example, have COUNTRY columns.\nRows are identified by their contents The rows of a table do not have names, nor is their position in a table fixed. Therefore, we refer to the rows of tables by describing the data values they contain: \u0026lsquo;Person number 2,\u0026rsquo; for instance, or \u0026lsquo;Al English-speaking countries.\u0026rsquo;\nSQL SQL, or Structured Query Language, is a specialized programming language used for managing and manipulating relational databases. SQL provides a standardized way to interact with databases, allowing users and applications to perform a wide range of operations on data\nSQL Commands\nThe standard SQL commands to interact with relational databases are CREATE, SELECT, INSERT, UPDATE, DELETE and DROP. These commands can be classified based on their nature:\n","permalink":"https://kipronokoech.github.io/posts/sql/1_intro_to_sql/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003ch2 id=\"what-is-a-relational-database\"\u003eWhat is a Relational Database?\u003c/h2\u003e\n\u003cp\u003eA relational database is a collection of data stored in tables. Each table consists of one or more vertical columns and zero or more horizontal rows.\u003c/p\u003e\n\u003ch3 id=\"tables-are-identified-by-name\"\u003eTables are identified by name\u003c/h3\u003e\n\u003cp\u003eTable names must be unique within a database. Typical SQL databases allow up to 18 characters in a table name. The first character must be a letter, while the remaining characters can be letters, numbers, or underscores.\u003c/p\u003e\n\u003ch3 id=\"columns-are-identified-by-name\"\u003eColumns are identified by name\u003c/h3\u003e\n\u003cp\u003eColumn names are unique within each table, but the same column name can appear in different tables. Both tables above, for example, have COUNTRY columns.\u003c/p\u003e\n\u003ch3 id=\"rows-are-identified-by-their-contents\"\u003eRows are identified by their contents\u003c/h3\u003e\n\u003cp\u003eThe rows of a table do not have names, nor is their position in a table fixed. Therefore, we refer to the rows of tables by describing the data values they contain: \u0026lsquo;Person number 2,\u0026rsquo; for instance, or \u0026lsquo;Al English-speaking countries.\u0026rsquo;\u003c/p\u003e","title":"Introduction to SQL and Relational Databases"},{"content":"A SQL statement is a collection of clauses, keywords, and parameters that perform a particular function. In the examples below, each clause is shown on a separate line; keywords appear in all uppercase letters, parameters in all lowercase letters.\nClauses The various clauses of SQL statements are named after their initial words: the SELECT clause, for example, or the FROM clause. SQL allows multiple clauses per line, but most SQL programmers use separate lines for clarity and ease of editing.\nKeywords SQL reserves a small number of words, called keywords, for specific purposes. Keywords can be entered ni upper, lower, or mixed-case letters; they are shown here in all uppercase. Keywords may not be used as table or column names.\nParameters Parameters are the \u0026lsquo;variable\u0026rsquo; parts of each clause. When formulating a SQL statement, you insert the appropriate column names, table names, and other such values in place of the lowercase parameters shown above.\nBasic Queries Let\u0026rsquo;s create a databased called \u0026lsquo;ds2\u0026rsquo;\n1 CREATE DATABASE ds2; [Info] At this point load the data from CSV into MySQL ds2 database (see Figure below).\nYou can create three tables, namely accounts, angaza_users, and payments by utilizing the data from the following three files:\naccounts.csv angaza_users.csv payments.csv These files contain the data that will be used to populate the respective tables.\nWe need to fix the registration_date field on accounts table - dates in SQL should be in the format yyyy-mm-dd. You don\u0026rsquo;t need to understand this for now. Just run the query on MySQL Workbench (or alternatives).\n1 2 UPDATE accounts SET registration_date = STR_TO_DATE(registration_date, \u0026#39;%d/%m/%Y\u0026#39;); Selecting All Columns \u0026amp; Rows - using asterisk (*) The following query fetches all rows and all columns from account table. 1 2 SELECT * FROM accounts Show the first 7 using LIMIT clause. 1 2 3 SELECT * FROM accounts LIMIT 7 Key points:\nSyntax 1 2 SELECT * FROM table_name All queries have SELECT and FROM clauses The FROM clause follows the SELECT clause The asterisk (*) means \u0026lsquo;all columns\u0026rsquo; The table name is specified in the FROM clause Columns and rows appear in arbitrary order You can show the first x rows using the LIMIT clause. Questions:\nFetch all rows and columns from angaza_users table Show the first 15 records on payments table. Selecting Specific Columns To select specific columns, we enter a list of columns in the SELECT statement (instead of an asterisk).\nEach column name is separated from the others by a comma and optional spaces. The columns are displayed in the order listed.\n1 2 SELECT angaza_id, area, daily_price FROM accounts; 1 2 SELECT user FROM angaza_users; The SQL query selects all columns for each user from the \u0026ldquo;angaza_users\u0026rdquo; table, including the \u0026ldquo;user\u0026rdquo; column. In this case, \u0026ldquo;user\u0026rdquo; field will appear twice.\n1 2 SELECT user,* FROM angaza_users; Key Points:\nSyntax 1 2 SELECT col1_name, col2_name, col4_name FROM table_name Column names are listed in the SELECT clause Column names are separated by commas Columns appear in the order listed Rows appear in arbitrary order Question:\nShow the area and country of all accounts. Selecting Specific Rows Rows in a table are identified by the values they contain.\nIt is therefore important to understand the different categories of values that SQL supports, and the appropriate syntax for entering each kind of value in query statements.\n1. Numeric values are entered in the normal way That is 76, -4, 3.142, etc Note: Note that commas, dollar signs, and percent signs are not allowed in numeric values. 2. Non-numeric values are enclosed in quotes Non-numeric values, called strings, are entered inside of single quote marks. Use two consecutive single quote marks inside a string to represent a single quote. 3. Date values are entered in \u0026lsquo;yyyy-mm-dd\u0026rsquo; format Dates must be enclosed in single quotes. One more piece before we are ready to select specific rows - comparison and comparison operators. A comparison is a phrase that consists of a column name, a comparison operator, and a value. Al comparisons yield a result of either true or false. Comparisons are used to specify which rows of a table should be included in the result of a query. Comparisons are specified in the WHERE clause of a SQL SELECT statement. The WHERE clause must immediately follow the FROM clause. The result table includes all the rows of the source table where the comparison is true.\nSelect accounts from Kenya\n1 2 3 SELECT * FROM accounts WHERE country=\u0026#39;Kenya\u0026#39; ; Fetch accounts registered on Sept 1, 2023 and onwards 1 2 3 SELECT * FROM accounts WHERE registration_date\u0026gt;=\u0026#39;2023-09-01\u0026#39;; Query all disabled accounts (whose days to cut off is under 0) 1 2 3 SELECT * FROM accounts WHERE days_to_cutoff\u0026lt;0; Key Points:\nSyntax: 1 2 3 SELECT column_list FROM table_name WHERE \u0026lt;condition\u0026gt;; The WHERE clause follows the FROM clause Comparisons are entered in the WHERE clause Rows where the comparison is true are displayed Question:\nSelect all accounts except those registered in Tanzania. Fetch all enabled accounts (those accounts whose days to cut off is 0 or greater) On payments table, fetch accounts which were not paid for on a given day. Show all cluster leaders on angaza_users table. Cluster leaders are tagged \u0026ldquo;Cluster Leader\u0026rdquo; in field_level. Sorting Rows To sort the rows of a result table, use the ORDER BY clause. This optional clause must be the last clause in a query.\nColumn names, column positions in the SELECT clause, and the keyword DESC (descending) can be entered as parameters. The default ordering is ASC (asending).\nSelect accounts registered in Tongareni and sort the results in descending order based on days_to_cutoff.\n1 2 3 4 5 SELECT * FROM accounts WHERE area=\u0026#39;Tongareni\u0026#39; ORDER BY days_to_cutoff DESC LIMIT 7; Fetch accounts registered in Morogoro, then sort the accounts in ascending order based on follow_on_paid field.\n1 2 3 4 5 SELECT * FROM accounts WHERE area=\u0026#39;Morogoro\u0026#39; ORDER BY follow_on_paid LIMIT 10; Sort payments in ascending order based on column at position 2 (angaza_id)\n1 2 3 4 5 SELECT account_angaza_id, angaza_id, amount_towards_follow_on FROM payments WHERE effective_date=\u0026#39;2023-09-29\u0026#39; ORDER BY 2 LIMIT 10; Key Points:\nSyntax: 1 2 3 4 SELECT col_list FROM table_name WHERE condition ORDER BY field DESC; The ORDER BY clause must be last A column name or position can be specified DESC indicates a descending sort and ASC keyword means sort in ascending order. Rows in a result table can be ordered based on the values in more than one column by entering a column list in the ORDER BY clause. The left-to-right order of the columns indicates the major-to-minor sort sequence.\n1 2 3 4 5 6 SELECT account_angaza_id, angaza_id, effective_date, amount_towards_follow_on FROM payments ORDER BY 2, 1, 3; 1 2 3 4 5 6 7 SELECT angaza_id, registration_date, upfront_price, days_to_cutoff FROM accounts WHERE area=\u0026#39;Ilorin\u0026#39; ORDER BY upfront_price ASC, days_to_cutoff DESC; Key Points:\nSyntax: 1 2 3 4 SELECT col_list FROM table_name WHERE condition ORDER BY field1, field2 [DESC]; A column list is allowed in the ORDER BY clause Column names are separated by commas Columns are listed in major-to-minor sequence Question:\nShow all columns on angaza_users, sort cluster in descending order and user in ascening order. Eliminating Duplicate Rows Typically, tables do not contain duplicate rows. Queries, however, may result in duplicate rows when a subset of the columns is selected. The keyword DISTINCT is used in the SELECT clause to prevent the display of duplicate rows in a result table.\n1 2 SELECT DISTINCT cluster FROM angaza_users; Key Points:\nSyntax: 1 2 3 4 SELECT [DISTINCT] cols_list FROM table_name WHERE conditions ORDER BY col1 [ASC|DESC], col2 [ASC|DESC] DISTINCT is entered after the keyword SELECT DISTINCT eliminates duplicate rows DISTINCT may only be entered once in a query Questions:\nList all distinct countries in accounts table. List all clusters in angaza_users, sort them in alphabetical order. List all areas in Nigeria ","permalink":"https://kipronokoech.github.io/posts/sql/2_basic_queries/","summary":"\u003cp\u003eA SQL statement is a collection of clauses, keywords, and parameters that perform a particular function. In the examples below, each clause is shown on a separate line; keywords appear in all uppercase letters, parameters in all lowercase letters.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/clauses_keywords.png\" alt=\"SQL Statements\"  /\u003e\n\u003c/p\u003e\n\u003ch3 id=\"clauses\"\u003eClauses\u003c/h3\u003e\n\u003cp\u003eThe various clauses of SQL statements are named after their initial words: the\nSELECT clause, for example, or the FROM clause. SQL allows multiple clauses per line, but most SQL programmers use separate lines for clarity and ease of editing.\u003c/p\u003e\n\u003ch3 id=\"keywords\"\u003eKeywords\u003c/h3\u003e\n\u003cp\u003eSQL reserves a small number of words, called keywords, for specific purposes. Keywords can be entered ni upper, lower, or mixed-case letters; they are shown here in all uppercase. Keywords may not be used as table or column names.\u003c/p\u003e\n\u003ch3 id=\"parameters\"\u003eParameters\u003c/h3\u003e\n\u003cp\u003eParameters are the \u0026lsquo;variable\u0026rsquo; parts of each clause. When formulating a SQL\nstatement, you insert the appropriate column names, table names, and other such values in place of the lowercase parameters shown above.\u003c/p\u003e","title":"Basic Queries in SQL"},{"content":"The LIKE Operator The LIKE operator is used to find values that match a pattern. Patterns are always entered in quotes.\nA per cent symbol is used to represent zero or more unknown characters; an underscore represents any single character.\nNote: The LIKE operator is added to the WHERE clause, as shown in the examples below.\nFilters rows where the \u0026ldquo;user\u0026rdquo; column starts with \u0026ldquo;Abd\u0026rdquo; followed by any characters.\n1 2 3 SELECT * FROM angaza_users WHERE user LIKE \u0026#39;Abd%\u0026#39;; It\u0026rsquo;s looking for values in the \u0026ldquo;user\u0026rdquo; column that start with \u0026ldquo;De\u0026rdquo; and end with \u0026ldquo;ni,\u0026rdquo; with any characters in between.\n1 2 3 SELECT * FROM angaza_users WHERE user LIKE \u0026#39;De%ni\u0026#39;; It searches for rows where the \u0026ldquo;user\u0026rdquo; column starts with \u0026lsquo;F,\u0026rsquo; followed by three characters, ends with \u0026rsquo;m,\u0026rsquo; or has additional characters afterwards.\n1 2 3 SELECT * FROM angaza_users WHERE user LIKE \u0026#39;F___m%\u0026#39;; Fetch accounts are registered in August of any year.\n1 2 3 SELECT * FROM accounts WHERE registration_date LIKE \u0026#39;%-08-%\u0026#39;; Key Points:\nLIKE finds values that match a pattern Percent (%) represents zero or more characters Underscore (_) represents one character Questions:\nFind all accounts registered in September 2023. Fetch all clusters in angaza_users that start with \u0026ldquo;O\u0026rdquo; The AND Operator The AND operator is used to combine two comparisons, creating a compound comparison. The keyword AND is placed between the two comparisons. Both comparisons must evaluate to true for the compound comparison to be true.\n1 2 3 SELECT * FROM accounts WHERE country=\u0026#34;Tanzania\u0026#34; AND days_to_cutoff\u0026gt;=0; 1 2 3 4 SELECT * FROM accounts WHERE country=\u0026#34;Kenya\u0026#34; AND days_to_cutoff\u0026gt;=0 AND daily_price\u0026gt;50 AND registration_date LIKE \u0026#39;2023-09%\u0026#39;; Key Points:\nSyntax 1 2 3 4 SELECT cols_list FROM table_name WHERE condition1 AND condition2 AND condition3; AND combines two comparisons AND is placed between two comparisons Both comparisons must evaluate to true Questions:\nSelect all accounts from Abeokuta, Nigeria. Find all enabled accounts in Kenya. Just get the accounts registered in August 2023. The BETWEEN Operator Some compound comparisons using the AND operator can be more conveniently expressed using the BETWEEN operator. BETWEEN compares each column value with a range of values. The range always includes the endpoints.\nThe following SQL query\n1 2 3 4 SELECT * FROM accounts WHERE country=\u0026#39;Tanzania\u0026#39; AND days_to_cutoff\u0026gt;=4 AND days_to_cutoff\u0026lt;=20; translates to this\n1 2 3 4 SELECT * FROM accounts WHERE country=\u0026#39;Tanzania\u0026#39; AND days_to_cutoff BETWEEN 4 AND 20; Key Points:\nBETWEEN compares each column value to a range The range includes both endpoints The second value must be greater than the first The OR Operator The OR operator is used to combine two comparisons, creating a compound comparison. The keyword OR is placed between the two comparisons. Either or both comparisons must evaluate to true for the compound comparison to be true.\n1 2 3 4 SELECT * FROM accounts WHERE country =\u0026#39;Tanzania\u0026#39; OR days_to_cutoff\u0026gt;10; Key Points:\nOR combines two comparisons OR is placed between two comparisons Either or both comparisons must evaluate to true Question:\nDisplay all columns and records in Eastern Africa. The IN Operator Some compound comparisons using the OR operator can be more conveniently expressed using the IN operator. IN compares each column value with a list of values. The list is enclosed in parentheses; the values are separated with commas.\n1 2 3 SELECT * FROM accounts WHERE area IN (\u0026#34;Kawangware\u0026#34;, \u0026#34;Tongareni\u0026#34;, \u0026#34;Sumbawanga\u0026#34;); The IS NULL Operator A null value is a missing entry in a column. Nul means \u0026lsquo;unknown\u0026rsquo; or \u0026lsquo;does not apply.\u0026rsquo; Nulls are neither blanks nor zeros (two nulls are not necessarily equal, and you cannot do arithmetic with nulls). The IS NULL operator locates rows with null values.\nThere are no columns with null values in the three tables we are working with. Here is the syntax.\n1 2 3 SELECT cols_list FROM table_name WHERE col IS NULL; Key Points:\nNulls are missing values Nulls are not the same as blanks Nulls are not the same as zeros (Not entirely) IS NULL locates null values Precedence and Negation Parentheses are used to indicate precedence - the order in which comparisons are evaluated. SQL evaluates comparisons enclosed in parentheses first. The keyword NOT is used to negate or reverse the result of a comparison.\n1 2 3 4 SELECT * FROM angaza_users WHERE user_angaza_id LIKE \u0026#34;US16%\u0026#34; AND (user LIKE \u0026#34;C%\u0026#34; OR user LIKE \u0026#34;%a\u0026#34;) AND field_level \u0026lt;\u0026gt; \u0026#34;\u0026#34;; 1 2 3 4 SELECT * FROM angaza_users WHERE user_angaza_id LIKE \u0026#34;US16%\u0026#34; AND NOT (user LIKE \u0026#34;C%\u0026#34; OR user LIKE \u0026#34;%a\u0026#34;) AND field_level \u0026lt;\u0026gt; \u0026#34;\u0026#34;; Key Points:\nComparisons in parentheses are evaluated first NOT is placed in front of a comparison NOT reverses the result of a comparison ","permalink":"https://kipronokoech.github.io/posts/sql/3_advanced_operators/","summary":"\u003ch1 id=\"the-like-operator\"\u003eThe LIKE Operator\u003c/h1\u003e\n\u003cp\u003eThe LIKE operator is used to find values that match a pattern. Patterns are always entered in quotes.\u003c/p\u003e\n\u003cp\u003eA per cent symbol is used to represent zero or more unknown characters; an underscore represents any single character.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e The LIKE operator is added to the WHERE clause, as shown in the examples below.\u003c/p\u003e\n\u003cp\u003eFilters rows where the \u0026ldquo;user\u0026rdquo; column starts with \u0026ldquo;Abd\u0026rdquo; followed by any characters.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e angaza_users\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003euser\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eLIKE\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Abd%\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIt\u0026rsquo;s looking for values in the \u0026ldquo;user\u0026rdquo; column that start with \u0026ldquo;De\u0026rdquo; and end with \u0026ldquo;ni,\u0026rdquo; with any characters in between.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e angaza_users\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003euser\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eLIKE\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;De%ni\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIt searches for rows where the \u0026ldquo;user\u0026rdquo; column starts with \u0026lsquo;F,\u0026rsquo; followed by three characters, ends with \u0026rsquo;m,\u0026rsquo; or has additional characters afterwards.\u003c/p\u003e","title":"Advanced Operators in SQL (Not Really Advanced 😜)"},{"content":"Arithmetic Expressions An arithmetic expression is a phrase formed with operands (numeric values and/or column names) and arithmetic operators (shown below). Arithmetic expressions are evaluated by SQL and replaced with the appropriate numeric value.\nOperands can be numeric values or column names In an expression, valid operands include numbers, column names, and other expressions. When a column is used in an expression, the values in that column must be numeric or valid dates. Only addition and subtraction are valid with dates.\nOperators are specified between operands Expressions in parentheses are evaluated first Along with the asterisk and column names, expressions can be specified in the column list of a SELECT clause. SQL inserts a calculated column in the result table at the given position. The new column name defaults to the expression itself.\n1 2 SELECT *, follow_on_paid +upfront_price FROM accounts; 1 2 SELECT *, expected_paid - follow_on_paid FROM accounts; Key Points:\nExpressions are specified in the SELECT clause Expressions produce new columns in the result Expressions are calculated for each row Expressions in Other Clauses Since SQL treats expressions in SELECT statements as \u0026lsquo;virtual columns\u0026rsquo; filled with calculated values, we can use expressions in place of column names in both the WHERE and ORDER BY clauses, as illustrated in the examples below.\n1 2 3 SELECT *, expected_paid - follow_on_paid FROM accounts WHERE expected_paid - follow_on_paid = 0; Key Points\nExpressions can be used in the WHERE clause Expressions can be used in the ORDER BY clause Column Aliases The keyword AS can be used in the SELECT clause to define a column alias- a user-assigned name for a column. Column aliases can be specified for any column, but they are most frequently used to give meaningful names to calculated columns.\n1 2 3 SELECT *, expected_paid - follow_on_paid AS amount_behind FROM accounts WHERE amount_behind = 0; Key Points:\nColumn aliases are defined in the SELECT clause Aliases cannot be used in the WHERE clause Aliases can be used in the ORDER BY clause AS is optional in some dialects ","permalink":"https://kipronokoech.github.io/posts/sql/4_expressions/","summary":"\u003ch1 id=\"arithmetic-expressions\"\u003eArithmetic Expressions\u003c/h1\u003e\n\u003cp\u003eAn arithmetic expression is a phrase formed with operands (numeric values and/or column names) and arithmetic operators (shown below). Arithmetic expressions are evaluated by SQL and replaced with the appropriate numeric value.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/arithmetric_operations.png\" alt=\"Arithmetic Operations\"  /\u003e\n\u003c/p\u003e\n\u003ch3 id=\"operands-can-be-numeric-values-or-column-names\"\u003eOperands can be numeric values or column names\u003c/h3\u003e\n\u003cp\u003eIn an expression, valid operands include numbers, column names, and other expressions. When a column is used in an expression, the values in that column must be numeric or valid dates. Only addition and subtraction are valid with dates.\u003c/p\u003e\n\u003ch3 id=\"operators-are-specified-between-operands\"\u003eOperators are specified between operands\u003c/h3\u003e\n\u003ch3 id=\"expressions-in-parentheses-are-evaluated-first\"\u003eExpressions in parentheses are evaluated first\u003c/h3\u003e\n\u003cp\u003eAlong with the asterisk and column names, expressions can be specified in the column list of a SELECT clause. SQL inserts a calculated column in the result table at the given position. The new column name defaults to the expression itself.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e, follow_on_paid \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003eupfront_price \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e accounts;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e, expected_paid \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e follow_on_paid \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e accounts;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eKey Points\u003c/strong\u003e:\u003c/p\u003e","title":"Expressions in SQL"},{"content":"Aggregation Functions An aggregation (statistical) function is a built-in program that accepts a parameter and returns a summary value. The parameter may be either a column name or an expression. The five statistical functions supported by standard SQL are shown in the following table.\nStatistical functions accept parameters Parameters are either column names or expressions. Parameters must always be enclosed in parentheses. Note that spaces inside and outside the parentheses are optional but are shown in the examples above for readability.\nStatistical functions return summary values SUM and AVG can only be used with columns that contain numeric values. COUNT, MIN, and MAX can be used with columns of any data type. All statistical functions operate on a single column or expression.\nCOUNT accepts a variety of parameters COUNT(*) produces a count of rows. COUNT(column) produces a count of rows where the specified column contains non-null values. COUNT(DISTINCT column) produces a count of unique, non-null values in the given column\nIf a SELECT clause contains nothing but statistical functions, SQL displays grand totals for the query. The resulting table contains one row, with one column for each statistical function. Column aliases may be used to rename the column(s).\n1 2 SELECT AVG(days_to_cutoff) AS average_days_to_cutoff FROM accounts; 1 2 3 SELECT MIN(daily_price), MAX(daily_price) FROM accounts WHERE country=\u0026#34;Kenya\u0026#34;; Key Points:\nOnly functions are specified in the SELECT clause The result contains only one row The result contains one column for each function Column aliases may be assigned Grouping Functions in Other Clauses If a SELECT clause contains column names and functions, SQL displays subtotals. The specified columns must also be listed in the GROUP BY clause. SQL divides the table into groups calculates subtotals for each and displays one row per group.\n1 2 3 SELECT registration_date, COUNT(*) AS \u0026#34;Unit Sales\u0026#34; FROM accounts GROUP BY registration_date; 1 2 3 SELECT country, AVG(days_to_cutoff) AS \u0026#34;AVG Days to Cut Off\u0026#34; FROM accounts GROUP BY country; 1 2 3 SELECT field_level, COUNT(*) AS Count FROM angaza_users GROUP BY field_level; 1 2 3 SELECT angaza_id, SUM(amount_towards_follow_on) AS Total_Collected FROM payments GROUP BY angaza_id; 1 2 3 SELECT area, country, COUNT(*) AS \u0026#34;Unit Sales\u0026#34; FROM accounts GROUP BY area, country; Key Points:\nGroup columns are specified in the SELECT clause Group columns are repeated in the GROUP BY clause Order of clauses FROM, WHERE, GROUP BY Functions in Other Clauses Functions cannot be specified in the WHERE clause because that clause is evaluated before grouping (and function execution) takes place. Functions can, however, appear in the HAVING clause, which is processed after grouping occurs.\nThis will not work:\n1 2 3 4 SELECT area, country, COUNT(*) AS unit_sales FROM accounts WHERE unit_sales\u0026gt;250 GROUP BY area, country; But this will:\n1 2 3 4 SELECT area, country, COUNT(*) AS unit_sales FROM accounts GROUP BY area, country HAVING unit_sales\u0026gt;250; Key Points:\nThe HAVING clause follows the GROUP BY clause The HAVING clause is just like WHERE except\u0026hellip; The HAVING clause is executed after grouping ","permalink":"https://kipronokoech.github.io/posts/sql/5_aggregation_functions/","summary":"\u003ch1 id=\"aggregation-functions\"\u003eAggregation Functions\u003c/h1\u003e\n\u003cp\u003eAn aggregation (statistical) function is a built-in program that accepts a parameter and returns a summary value. The parameter may be either a column name or an expression. The five statistical functions supported by standard SQL are shown in the following table.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/statististical_functions.png\" alt=\"statististical_functions.png\"  /\u003e\n\u003c/p\u003e\n\u003ch3 id=\"statistical-functions-accept-parameters\"\u003eStatistical functions accept parameters\u003c/h3\u003e\n\u003cp\u003eParameters are either column names or expressions. Parameters must always be enclosed in parentheses. Note that spaces inside and outside the parentheses are\noptional but are shown in the examples above for readability.\u003c/p\u003e\n\u003ch3 id=\"statistical-functions-return-summary-values\"\u003eStatistical functions return summary values\u003c/h3\u003e\n\u003cp\u003eSUM and AVG can only be used with columns that contain numeric values. COUNT, MIN, and MAX can be used with columns of any data type. All statistical functions operate on a single column or expression.\u003c/p\u003e\n\u003ch3 id=\"count-accepts-a-variety-of-parameters\"\u003eCOUNT accepts a variety of parameters\u003c/h3\u003e\n\u003cp\u003eCOUNT(*) produces a count of rows. COUNT(column) produces a count of rows where the specified column contains non-null values. COUNT(DISTINCT column)\nproduces a count of unique, non-null values in the given column\u003c/p\u003e","title":"Aggregation Functions in SQL"},{"content":"Joins The SQL Joins clause is used to combine records from two or more tables in a database. A JOIN is a means of merging two tables based on common fields.\nINNER JOIN: returns rows when there is a match in both tables. LEFT JOIN: returns all rows from the left table, even if there are no matches in the right table. RIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table. FULL JOIN: returns rows when there is a match in one of the tables. Note: FULL JOIN cannot be implemented directly in MySQL dialet. In this dialect, FULL JOIN is the UNION between RIGHT JOIN and LEFT JOIN.\n1 2 3 4 SELECT * FROM accounts AS acc INNER JOIN angaza_users AS angaza ON acc.responsible_user_angaza_id = angaza.user_angaza_id; 1 2 3 4 SELECT * FROM angaza_users AS angaza LEFT JOIN accounts AS acc ON acc.responsible_user_angaza_id = angaza.user_angaza_id; 1 2 3 4 SELECT * FROM angaza_users AS angaza RIGHT JOIN accounts AS acc ON acc.responsible_user_angaza_id = angaza.user_angaza_id; UNION and Full Join: A union combines the rows of two similar queries into a single result with no duplicates. The keyword UNION is placed between the queries. The ORDER BY clause, if used, must specify column positions and appear in the final query only.\n1 2 3 4 5 6 7 8 9 10 11 SELECT * FROM angaza_users AS angaza LEFT JOIN accounts AS acc ON acc.responsible_user_angaza_id = angaza.user_angaza_id UNION SELECT * FROM angaza_users AS angaza RIGHT JOIN accounts AS acc ON acc.responsible_user_angaza_id = angaza.user_angaza_id; Key Points on UNION:\nThe number and type of columns must match The UNION keyword is placed between the queries ORDER BY, if used, must be the last clause ORDER BY must specify column positions Duplicate rows are not included in the result Table Aliases The keyword AS can be used in the FROM clause to define a table alias - a user-assigned name for a table. Table aliases can be specified for any table, but they are most frequently used in multi-table queries to shorten full column names.\nExample queries are shown in the \u0026ldquo;Joins\u0026rdquo; section above.\nKey Points:\nTable aliases are defined in the FROM clause Table aliases can be used in any clause Once an alias is defined, the original cannot be used AS is optional in some dialects ","permalink":"https://kipronokoech.github.io/posts/sql/6_multiple_table_queries/","summary":"\u003ch1 id=\"joins\"\u003eJoins\u003c/h1\u003e\n\u003cp\u003eThe SQL Joins clause is used to combine records from two or more tables in a database. A JOIN is a means of merging two tables based on common fields.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eINNER JOIN\u003c/strong\u003e: returns rows when there is a match in both tables.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLEFT JOIN\u003c/strong\u003e: returns all rows from the left table, even if there are no matches in the right table.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRIGHT JOIN\u003c/strong\u003e: returns all rows from the right table, even if there are no matches in the left table.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFULL JOIN\u003c/strong\u003e: returns rows when there is a match in one of the tables.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: FULL JOIN cannot be implemented directly in MySQL dialet. In this dialect, FULL JOIN is the UNION between RIGHT JOIN and LEFT JOIN.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e accounts \u003cspan style=\"color:#66d9ef\"\u003eAS\u003c/span\u003e acc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eINNER\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eJOIN\u003c/span\u003e angaza_users \u003cspan style=\"color:#66d9ef\"\u003eAS\u003c/span\u003e angaza\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eON\u003c/span\u003e acc.responsible_user_angaza_id \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e angaza.user_angaza_id;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e angaza_users \u003cspan style=\"color:#66d9ef\"\u003eAS\u003c/span\u003e angaza\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eLEFT\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eJOIN\u003c/span\u003e accounts \u003cspan style=\"color:#66d9ef\"\u003eAS\u003c/span\u003e acc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eON\u003c/span\u003e acc.responsible_user_angaza_id \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e angaza.user_angaza_id;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e angaza_users \u003cspan style=\"color:#66d9ef\"\u003eAS\u003c/span\u003e angaza\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eRIGHT\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eJOIN\u003c/span\u003e accounts \u003cspan style=\"color:#66d9ef\"\u003eAS\u003c/span\u003e acc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eON\u003c/span\u003e acc.responsible_user_angaza_id \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e angaza.user_angaza_id;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"union-and-full-join\"\u003eUNION and Full Join:\u003c/h2\u003e\n\u003cp\u003eA union combines the rows of two similar queries into a single result with no duplicates. The keyword UNION is placed between the queries. The ORDER BY clause, if used, must specify column positions and appear in the final query only.\u003c/p\u003e","title":"Joins"},{"content":"Single-Valued Subqueries A single-valued subquery is a query that 1) produces a result with a single column and a single row and 2) is \u0026rsquo;nested\u0026rsquo; in the WHERE clause of another query. Subqueries must be enclosed in parentheses.\nA single-valued queries:\n1 2 SELECT AVG(days_to_cutoff) FROM accounts; Sing-valued sub-query:\n1 2 3 4 5 SELECT * FROM accounts WHERE days_to_cutoff \u0026gt; (SELECT AVG(days_to_cutoff) FROM accounts) ORDER BY days_to_cutoff; Key Points:\nSingle-valued queries can be used in comparisons Subqueries are enclosed in parentheses Multi-Valued Subqueries A multi-valued subquery is a query that 1) returns a single-column result with zero, one, or more rows and 2) is \u0026rsquo;nested\u0026rsquo; in the WHERE clause of another query. Multi-valued subqueries always follow the IN operator.\n1 2 3 4 5 SELECT AVG(days_to_cutoff) FROM accounts WHERE angaza_id IN (SELECT angaza_id FROM accounts WHERE area=\u0026#34;Ilorin\u0026#34;); Key Point: Multi-valued subqueries follow the IN operator.\n","permalink":"https://kipronokoech.github.io/posts/sql/7_queries_within_queries/","summary":"\u003ch1 id=\"single-valued-subqueries\"\u003eSingle-Valued Subqueries\u003c/h1\u003e\n\u003cp\u003eA single-valued subquery is a query that 1) produces a result with a single column and a single row and 2) is \u0026rsquo;nested\u0026rsquo; in the WHERE clause of another query. Subqueries must be enclosed in parentheses.\u003c/p\u003e\n\u003cp\u003eA single-valued queries:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eAVG\u003c/span\u003e(days_to_cutoff)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e accounts;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eSing-valued sub-query:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e days_to_cutoff \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eAVG\u003c/span\u003e(days_to_cutoff)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e accounts)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eORDER\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eBY\u003c/span\u003e days_to_cutoff;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eKey Points\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSingle-valued queries can be used in comparisons\u003c/li\u003e\n\u003cli\u003eSubqueries are enclosed in parentheses\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"multi-valued-subqueries\"\u003eMulti-Valued Subqueries\u003c/h1\u003e\n\u003cp\u003eA multi-valued subquery is a query that 1) returns a single-column result with zero, one, or more rows and 2) is \u0026rsquo;nested\u0026rsquo; in the WHERE clause of another query. Multi-valued subqueries always follow the IN operator.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eAVG\u003c/span\u003e(days_to_cutoff)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e accounts \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e angaza_id \u003cspan style=\"color:#66d9ef\"\u003eIN\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e angaza_id\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eFROM\u003c/span\u003e accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eWHERE\u003c/span\u003e area\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Ilorin\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eKey Point\u003c/strong\u003e:\nMulti-valued subqueries follow the IN operator.\u003c/p\u003e","title":"Queries with Queries with SQL"},{"content":"Creating Tables in SQL New tables are defined in a database by entering a CREATE TABLE statement. In its simplest form, the CREATE TABLE statement includes a new table name and one or more column definitions. Tables are removed using the DROP TABLE statement.\nSQL Syntax for Creating Tables:\n1 2 3 4 5 CREATE TABLE table_name ( column1 datatype constraints, column2 datatype constraints, ... ); table_name: The name of the table you want to create. column1, column2, etc.: The names of the columns in the table. datatype: The data type for each column (e.g., INT, VARCHAR, DATE, etc.). constraints: Optional constraints (discussed in the next section) Example: Creating a simple table with basic columns:\n1 2 3 4 5 6 7 CREATE TABLE Employees ( EmployeeID INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), Salary DECIMAL(10, 2), HireDate DATE ); You can check the structure of a specific table using the DESCRIBE statement. For example,\n1 2 # Show characteristics of table fields DESCRIBE customers; SQL Integrity Constraints SQL constraints are rules and conditions applied to tables and columns to ensure the accuracy, integrity, and consistency of data stored in the database. Constraints define limitations or requirements for the data that can be inserted, updated, or deleted in a database table. Here are common SQL constraints and their definitions:\nDEFAULT:\nPurpose: The DEFAULT constraint is used to specify a default value for a column when a new record is inserted into a table if no explicit value is provided for that column. Example: 1 2 3 4 5 CREATE TABLE Employees ( EmployeeID INT, FirstName VARCHAR(50) DEFAULT \u0026#39;John\u0026#39;, LastName VARCHAR(50) DEFAULT \u0026#39;Doe\u0026#39; ); NOT NULL:\nPurpose: The NOT NULL constraint ensures that a column cannot contain NULL values, meaning it must have a value in every row. Example: 1 2 3 4 CREATE TABLE Customers ( CustomerID INT NOT NULL, FirstName VARCHAR(50) NOT NULL, LastName VARCHAR(50) NOT NULL); UNIQUE:\nPurpose: The UNIQUE constraint ensures that all values in a column are unique across all rows in the table. It enforces data integrity by preventing duplicate values. Example: 1 2 3 CREATE TABLE Products ( ProductID INT UNIQUE, ProductName VARCHAR(50) UNIQUE); CHECK:\nPurpose: The CHECK constraint is used to specify a condition that values in a column must meet. If the condition evaluates to false, the insertion or update operation is rejected. Example: 1 2 3 4 CREATE TABLE Orders ( OrderID INT, OrderDate DATE CHECK (OrderDate \u0026gt;= \u0026#39;2023-01-01\u0026#39;) ); INDEX:\nPurpose: The INDEX constraint is not an integrity constraint itself, but it is used to improve query performance. It creates an index on one or more columns, allowing for faster data retrieval. Example: 1 CREATE INDEX idx_ProductName ON Products (ProductName); PRIMARY KEY (PK):\nPurpose: The PRIMARY KEY constraint uniquely identifies each record in a table. It enforces the uniqueness of values in the specified column(s) and ensures that they are not NULL. Example: 1 2 3 CREATE TABLE Students ( StudentID INT PRIMARY KEY, StudentName VARCHAR(50)); PK can be made of a single field (like in the example above) or multiple columns, as shown below.\n1 2 3 4 5 6 CREATE TABLE Orders ( OrderID INT, ProductID INT, Quantity INT, PRIMARY KEY (OrderID, ProductID) ); FOREIGN KEY (FK):\nPurpose: The FOREIGN KEY constraint establishes a link between two tables by defining a relationship between a column in one table (the child table) and the primary key column in another table (the parent table). It enforces referential integrity, ensuring that values in the child table match values in the parent table. Example: 1 2 3 4 5 6 CREATE TABLE Orders ( OrderID INT PRIMARY KEY, CustomerID INT, OrderDate DATE, FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID) ); In the table above, the CustomerID column in the Orders table is a foreign key that references the CustomerID primary key in the Customers table, creating a relationship between the two tables.\n","permalink":"https://kipronokoech.github.io/posts/sql/8_defining_database_object/","summary":"\u003ch1 id=\"creating-tables-in-sql\"\u003eCreating Tables in SQL\u003c/h1\u003e\n\u003cp\u003eNew tables are defined in a database by entering a CREATE TABLE statement. In its simplest form, the CREATE TABLE statement includes a new table name and one or more column definitions. Tables are removed using the DROP TABLE statement.\u003c/p\u003e\n\u003cp\u003eSQL Syntax for Creating Tables:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eCREATE\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eTABLE\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003etable_name\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    column1 datatype \u003cspan style=\"color:#66d9ef\"\u003econstraints\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    column2 datatype \u003cspan style=\"color:#66d9ef\"\u003econstraints\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etable_name\u003c/code\u003e: The name of the table you want to create.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecolumn1\u003c/code\u003e, \u003ccode\u003ecolumn2\u003c/code\u003e, etc.: The names of the columns in the table.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edatatype\u003c/code\u003e: The data type for each column (e.g., INT, VARCHAR, DATE, etc.).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econstraints\u003c/code\u003e: Optional constraints (discussed in the next section)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eExample: Creating a simple table with basic columns:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eCREATE\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eTABLE\u003c/span\u003e Employees (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    EmployeeID INT \u003cspan style=\"color:#66d9ef\"\u003ePRIMARY\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eKEY\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    FirstName VARCHAR(\u003cspan style=\"color:#ae81ff\"\u003e50\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    LastName VARCHAR(\u003cspan style=\"color:#ae81ff\"\u003e50\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Salary DECIMAL(\u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    HireDate DATE\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eYou can check the structure of a specific table using the DESCRIBE statement. For example,\u003c/p\u003e","title":"Creating Database Objects"},{"content":"Before we learn how to update data in SQL tables, let\u0026rsquo;s create two tables we will use: customers and orders.\ncustomers table 1 2 3 4 5 6 7 8 9 USE ds2; # select database show tables; CREATE TABLE customers ( id INT PRIMARY KEY, name VARCHAR(30) NOT NULL, age INT DEFAULT - 99, address VARCHAR(45), salary DECIMAL(18 , 2 ) DEFAULT 2000.00 ); orders table 1 2 3 4 5 6 7 CREATE TABLE orders ( id INT NOT NULL, date datetime, customer_id INT REFERENCES customers (id), amount DOUBLE, PRIMARY KEY (id) ); Inserting Rows Updating Rows New rows may be inserted into a table one at a time using the SQL INSERT statement. A table name and column list are specified in the INTO clause, and a value list, enclosed in parentheses, is entered in the VALUES clause.\nAdding data into the customers table 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # Add values to the table insert into customers values (1, \u0026#34;Kiprono Elijah\u0026#34;, 27, \u0026#34;20 Koisagat\u0026#34;, 483000.50); /*issuing salary with decimal places more than indicated at table creation leads to rounding off 504560.987 is rounded off to 504560.99*/ insert into customers values (2, \u0026#34;Caroline Koech\u0026#34;, 25, \u0026#34;62 Sereng\u0026#34;, 504560.987); /* Insert values to specific fields. Note: if a given field does not accept a null value, you must provide it -e.g. id, name*/ insert into customers(id,name,age) values(9, \u0026#34;Maritim Dancun\u0026#34;, 31); /*Insert multiple entries in one line*/ insert into customers(id,name,age,address,salary) values (3, \u0026#34;Jane Koskey\u0026#34;, 72, \u0026#34;20 Koisagat\u0026#34;, 64000), (4, \u0026#34;Maritim Benard\u0026#34;, 28, \u0026#34;20 Koisagat\u0026#34;, 72000), (5, \u0026#34;Rotich Geoffrey\u0026#34;, 48, \u0026#34;78 Mentera\u0026#34;, 54120); insert into customers values(6, \u0026#34;Faith Chelang\u0026#39;at\u0026#34;, 15, \u0026#34;45 Lelu\u0026#34;, 0); insert into customers values(7, \u0026#34;Angela Chepkoech\u0026#34;, 13, \u0026#34;20 Fort-Ternan\u0026#34;, 0); insert into customers values(8, \u0026#34;Joy Chepkoech\u0026#34;, 14, \u0026#34;98 Kipkelion\u0026#34;, 0); Adding rows into orders table. 1 2 3 4 5 insert into orders values (101, \u0026#34;20220902\u0026#34;, 2, 4810), (102, \u0026#34;20220604\u0026#34;, 3, 1415), (103, \u0026#34;20220711\u0026#34;, 2, 3920), (104, \u0026#34;20211214\u0026#34;, 5, 2210); Deleting Rows in SQL To remove one or more rows from a SQL table, you can use the DELETE statement. The DELETE statement allows you to specify a condition that identifies the rows to be deleted. Be cautious when using the DELETE statement, as it can permanently remove data from your table.\nDeleting Rows with a Condition To delete rows that meet specific criteria, you can use the DELETE statement with a WHERE clause. Here\u0026rsquo;s an example:\n1 2 -- Delete all customers with age greater than 60 DELETE FROM customers WHERE age \u0026gt; 60; Deleting All Rows To delete all rows from a table, you can use the DELETE statement without a WHERE clause. Be careful when using this, as it will remove all data from the table.\n1 2 -- Delete all rows from the orders table DELETE FROM orders; Updating Rows in SQL To modify existing data in SQL tables, you can use the UPDATE statement. The UPDATE statement allows you to change the values of one or more columns in existing rows.\nUpdating Rows with a Condition To update rows that meet specific criteria, you can use the UPDATE statement with a WHERE clause. Here\u0026rsquo;s an example:\n1 2 -- Update the salary for customers with an age greater than 30 UPDATE customers SET salary = 3000 WHERE age \u0026gt; 30; Updating All Rows To update all rows in a table, you can use the UPDATE statement without a WHERE clause. Be cautious when using this, as it will modify all rows in the table.\n1 2 -- Update all order amounts to 5000 in the orders table UPDATE orders SET amount = 5000; These are basic examples of how to delete and update rows in SQL. Always exercise caution when modifying data, especially when using DELETE without a WHERE clause or when updating multiple rows.\n","permalink":"https://kipronokoech.github.io/posts/sql/9_maintaining_tables/","summary":"\u003cp\u003eBefore we learn how to update data in SQL tables, let\u0026rsquo;s create two tables we will use: \u003cem\u003ecustomers\u003c/em\u003e and \u003cem\u003eorders\u003c/em\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003ecustomers\u003c/em\u003e table\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e9\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eUSE ds2; \u003cspan style=\"color:#f92672\"\u003e#\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003edatabase\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eshow\u003c/span\u003e tables;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eCREATE\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eTABLE\u003c/span\u003e customers (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    id INT \u003cspan style=\"color:#66d9ef\"\u003ePRIMARY\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eKEY\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    name VARCHAR(\u003cspan style=\"color:#ae81ff\"\u003e30\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003eNOT\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eNULL\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    age INT \u003cspan style=\"color:#66d9ef\"\u003eDEFAULT\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e99\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    address VARCHAR(\u003cspan style=\"color:#ae81ff\"\u003e45\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    salary DECIMAL(\u003cspan style=\"color:#ae81ff\"\u003e18\u003c/span\u003e , \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e ) \u003cspan style=\"color:#66d9ef\"\u003eDEFAULT\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e2000\u003c/span\u003e.\u003cspan style=\"color:#ae81ff\"\u003e00\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003cem\u003eorders\u003c/em\u003e table\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eCREATE\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eTABLE\u003c/span\u003e orders (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    id INT \u003cspan style=\"color:#66d9ef\"\u003eNOT\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eNULL\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    date datetime,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    customer_id INT \u003cspan style=\"color:#66d9ef\"\u003eREFERENCES\u003c/span\u003e customers (id),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    amount DOUBLE,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ePRIMARY\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eKEY\u003c/span\u003e (id)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"inserting-rows-updating-rows\"\u003eInserting Rows Updating Rows\u003c/h2\u003e\n\u003cp\u003eNew rows may be inserted into a table one at a time using the SQL INSERT statement. A table name and column list are specified in the INTO clause, and a value list, enclosed in parentheses, is entered in the VALUES clause.\u003c/p\u003e","title":"Maintaining and Managing Database Objects in SQL"},{"content":"This guide will discuss how to install Python manually on a Linux machine. For your convenience, we will also discuss how to uninstall Python installed in this way.\nSteps to Follow to Install Python Manually First of all, we need to update package repositories and install dependencies.\nStep 1: Update repositories On Debian-based distributions, execute (modify the commands according to the distro you are running):\n1 2 3 4 sudo apt update sudo apt install build-essential zlib1g-dev \\ libncurses5-dev libgdbm-dev libnss3-dev \\ libssl-dev libreadline-dev libffi-dev curl Step 2: Download the stable release of Python on its official website In this step, go to https://www.python.org/downloads/source/ and download XZ compressed source tarball (.tar.xz) file. This file contains all the source files we can build to get the Python we want (I am downloading Python 3.10.5, so I get, Python-3.10.5.tar.xz file).\nStep 3: Extract the tarball Use the inbuilt extraction functionality to extract the tarball, or you can use the tar command in Python as follows\n1 tar -xf Python-****.tar.xz (In my case, I have to run tar -xf Python-3.10.5.tar.xz)\nStep 3: Run the configuration This is accomplished by running the following command on Linux Terminal\n1 cd Python-****/ \u0026amp;\u0026amp; ./configure That is, cd into the extracted directory and run configure file.\nStep 4: Build the package Since we want to install this Python version along with the preinstalled one, we will run:\n1 sudo make altinstall Now, Python 3.10 is installed, and we can wake it up by running\n1 python3.10 or\n1 /usr/local/bin/python3.10 Remove Python install Manually To do that, save the following commands on the bash file named “uninstall_python.sh” (you can give it any name, really) and execute it with sudo privileges.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 loc=\u0026#39;/usr/local/\u0026#39; py_version=\u0026#34;$1\u0026#34; rm -rf \\ $HOME/.local/lib/Python${py_version} \\ ${loc}bin/python${py_version} \\ ${loc}bin/python${py_version}-config \\ ${loc}bin/pip${py_version} \\ ${loc}bin/include/python${py_version} \\ ${loc}lib/libpython${py_version}.a \\ ${loc}lib/python${py_version} \\ ${loc}lib/pkgconfig/python-${py_version}.pc \\ ${loc}lib/libpython${py_version}m.a \\ ${loc}bin/python${py_version}m \\ ${loc}bin/2to3-${py_version} \\ ${loc}bin/python${py_version}m-config \\ ${loc}bin/idle${py_version} \\ ${loc}bin/pydoc${py_version} \\ ${loc}bin/pyvenv-${py_version} \\ ${loc}share/man/man1/python${py_version}.1 \\ ${loc}include/python${py_version}m \\ ${loc}bin/easy_install-${py_version} Execute the bash script by running:\n1 sudo bash \u0026lt;location of uninstall_python.sh\u0026gt; \u0026lt;python version to remove\u0026gt; In my case, I will cd into the location of uninstall_python.sh and run the command.\n1 sudo bash uninstall_python.sh 3.10 ","permalink":"https://kipronokoech.github.io/posts/how-to-install-python-manually-in-linux/","summary":"\u003cp\u003eThis guide will discuss how to install Python manually on a Linux machine. For your convenience, we will also discuss how to uninstall Python installed in this way.\u003c/p\u003e\n\u003ch2 id=\"steps-to-follow-to-install-python-manually\"\u003eSteps to Follow to Install Python Manually\u003c/h2\u003e\n\u003cp\u003eFirst of all, we need to update package repositories and install dependencies.\u003c/p\u003e\n\u003ch3 id=\"step-1-update-repositories\"\u003eStep 1: Update repositories\u003c/h3\u003e\n\u003cp\u003eOn Debian-based distributions, execute (modify the commands according to the distro you are running):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt install build-essential zlib1g-dev \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003elibncurses5-dev libgdbm-dev libnss3-dev \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003elibssl-dev libreadline-dev libffi-dev curl\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch3 id=\"step-2-download-the-stable-release-of-python-on-its-official-website\"\u003eStep 2: Download the stable release of Python on its official website\u003c/h3\u003e\n\u003cp\u003eIn this step, go to \u003ca href=\"https://www.python.org/downloads/source/\" target=\"_blank\"\u003e\n  https://www.python.org/downloads/source/\n\u003c/a\u003e and download XZ compressed source tarball (.tar.xz) file. This file contains all the source files we can build to get the Python we want (I am downloading Python 3.10.5, so I get, \u003cem\u003ePython-3.10.5.tar.xz\u003c/em\u003e file).\u003c/p\u003e","title":"How to Install Python Manually in Linux"},{"content":"Connecting to a Remote Server through SSH SSH (Secured Shell) is a program for accessing and managing remote machines. It is intended to provide secure encrypted communications between two untrusted hosts over an insecure network.\nIn this article, we will refer to the machine initiating the SSH connection as the local or client system and the device on the receiving end as the server or remote machine.\nNote that the installation commands may be different based on the system you are running. Nevertheless, it should be easy to tweak these commands on Linux and MacOS.\nInstall an OpenSSH Client on the Local Machine Check if the SSH client is installed by running ssh on the terminal. If the OpenSSH client is not installed, you can install it using the line 1 sudo apt install openssh-client Install an OpenSSH Server on the Remote System Check if OpenSSH Server is installed by running ssh localhost.\nIf the server is not installed, you will see something like this:\nssh: connect to host localhost port 22: Connection refused\nIf the server is not installed on the remote, you can install it using the following line\n1 sudo apt-get install openssh-server Note: If you intend to connect to and from the remote machine, you should install OpenSSH Client and OpenSSH Server on the local and remote machines.\nVerify that OpenSSH Server is running (by default, it should be running after installation) Run sudo service ssh status If the server daemon is not running, you can restart it with, 1 sudo service ssh restart Get the IP address of the remote machine using the sudo ifconfig -a command. (You may need to install net-tools if ifconfig is not found: sudo apt install net-tools) Connect via SSH General syntax to connect: ssh your_username@host_ip_address Allow SSH to establish the connection via firewall using UFW. Install UFW: sudo apt install ufw, Check if UFW is running: sudo ufw status, Start UFW: sudo ufw enable, When the VPS is set up for IPv6, make sure to confirm that UFW is set up to handle IPv6 as well: sudo nano /etc/default/ufw, Allow SSH: sudo ufw allow ssh or sudo ufw allow 22/tcp, The TCP protocol facilitates the communication on port 22 with this instruction. Allow TCP to connect using sudo ufw allow 2222/tcp Revoke permission for SSH: sudo ufw delete allow ssh. The same can be done for TCP. Every time you SSH to a remote server, you will be required to input the password for the remote machine as a form of authentication. Another way of authentication is to use SSH Keys.\nGenerating SSH Keys Generate SSH Keys of RSA type and 4096 bytes in size by running the command\n1 ssh-keygen -t rsa -b 4096 You can accept the defaults and set the passphrase if you want (keep the passphrase safe).\nAt this point, you can then copy the contents of id_rsa.pub and share them as needed for verification. You can do the copying manually or use the following commands.\n1 2 3 ls ~/.ssh ssh-add ~/.ssh/id_rsa cat ~/.ssh/id_rsa.pub | xclip -sel clip Using SSH Key-Based Authentication This Section discusses how to use the SSH Keys you generated above for authentication instead of using a password every time we SSH to a server.\n[On the local] After generating the SSH Keys in the previous Section, you will have a .ssh folder in the home directory with two files: id_rsa - This is a private key. DO NOT SHARE IT. id_rsa.pub - The associated public key. This is the key you should be sharing for authentication. [On the remote] Make a .ssh folder on the remotes\u0026rsquo;s home directory (if it does not exist already). Copy the public key on the local machine into the .ssh folder in the remote. You can rename it in the process (recommended). 1 scp ~/.ssh/id_rsa.pub koech@192.168.100.55:/home/koech/.ssh/dell_id_rsa.pub The command above copied id_rsa.pub as dell_id_rsa.pub to the remote machine with the user name koech and IP as 192.168.100.55.\nTo complete steps 4 and 5, you need to SSH into the remote machine (at this point, you have to use the password) using the ssh username@remove_ip command, for example, ssh koech@192.168.100.5.\n[On the remote] Copy the content of the file copied in (3) into another file named authorized_keys (don\u0026rsquo;t name that file any other way) by running 1 2 cd ~/.ssh/ cat dell_id_rsa.pub \u0026gt;\u0026gt; authorized_keys You can check that the keys were correctly copied by running:\n1 cat authorized_keys [On the remote] Run the following commands on the .ssh folder chmod 700 path/to/ssh_folder\nchmod 600 path/to/ssh_folder_contents\nthat is,\n1 2 chmod 700 . chmod 600 * At this point, you should be able to SSH into the remote machine without a password.\n","permalink":"https://kipronokoech.github.io/posts/ssh_essentials/","summary":"\u003ch2 id=\"connecting-to-a-remote-server-through-ssh\"\u003eConnecting to a Remote Server through SSH\u003c/h2\u003e\n\u003cp\u003eSSH (Secured Shell) is a program for accessing and managing remote machines. It is intended to provide secure encrypted communications between two untrusted hosts over an insecure network.\u003c/p\u003e\n\u003cbr/\u003e\n\u003cp\u003eIn this article, we will refer to the machine initiating the SSH connection as the \u003cstrong\u003elocal\u003c/strong\u003e or \u003cstrong\u003eclient\u003c/strong\u003e system and the device on the receiving end as the \u003cstrong\u003eserver\u003c/strong\u003e or \u003cstrong\u003eremote\u003c/strong\u003e machine.\u003c/p\u003e\n\u003cbr/\u003e\n\u003cp\u003eNote that the installation commands may be different based on the system you are running. Nevertheless, it should be easy to tweak these commands on Linux and MacOS.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eInstall an OpenSSH Client on the Local Machine\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003eCheck if the SSH client is installed by running \u003ccode\u003essh\u003c/code\u003e on the terminal.\u003c/li\u003e\n\u003cli\u003eIf the OpenSSH client is not installed, you can install it using the line\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt install openssh-client\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003e\u003cstrong\u003eInstall an OpenSSH Server on the Remote System\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCheck if OpenSSH Server is installed by running \u003ccode\u003essh localhost\u003c/code\u003e.\u003c/p\u003e","title":"SSH Essentials"},{"content":"Some MarkDown Syntax Working with URLs on MarkDown Some URL\n1 Some link [Link to Unsplash](https://unsplash.com/@chelseanscott?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText) Rendered as\nSome link Link to Unsplash Use HTML code if you want to open link on a new tab. Here is an example.\n1 \u0026lt;a href=\u0026#34;https://unsplash.com\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt; Link2\u0026lt;a/\u0026gt; Rendering code on MarkDown The Code can be rendered using the the following Syntax.\n1 2 3 `\u0026lt;language\u0026gt; (use 3 `) (some code here) ` (use 3 `) Here is some Python code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import psycopg2 data_folder = \u0026#34;clean_data/August\u0026#34; import os import pandas as pd import numpy as np #Establishing the connection conn = psycopg2.connect( database=\u0026#34;kiprono_database2\u0026#34;, user=\u0026#39;postgres\u0026#39;, password=\u0026#39;pass1\u0026#39;, host=\u0026#39;127.0.0.1\u0026#39;, port= \u0026#39;5432\u0026#39; ) #Setting auto commit false conn.autocommit = True #Creating a cursor object using the cursor() method cursor = conn.cursor() files = os.listdir(data_folder) print(files) for file in files: df = pd.read_csv(os.path.join(data_folder, file)) df = df[[\u0026#39;wmoID\u0026#39;, \u0026#39;kmdID\u0026#39;, \u0026#39;Year\u0026#39;, \u0026#39;Month\u0026#39;, \u0026#39;Day\u0026#39;, \u0026#39;Hour\u0026#39;, \u0026#39;AirTemp\u0026#39;, \u0026#39;Tmax\u0026#39;, \u0026#39;Tmin\u0026#39;]] data = df.to_dict(orient=\u0026#34;records\u0026#34;) for data_point in data: result = list(data_point.values()) insert_command = \u0026#39;\u0026#39;\u0026#39;INSERT INTO AMSS(wmoID, kmdID, Year, Month, Day, Hour, AirTemp, Tmax, Tmin)\\ VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)\u0026#39;\u0026#39;\u0026#39; try: cursor.execute(insert_command, result) # Commit your changes in the database conn.commit() except psycopg2.errors.UniqueViolation as e: print(e) continue # Closing the connection conn.close() More code on CSS\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 div.highlight button { color: #adb5bd; box-sizing: border-box; transition: 0.2s ease-out; cursor: pointer; user-select: none; background: rgba(0, 0, 0, 0.15); border: 1px solid rgba(0, 0, 0, 0); padding: 5px 10px; font-size: 0.8em; position: absolute; top: 0; right: 0; border-radius: 0 0.15rem; } JavaScript:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 var copy = function(target) { var textArea = document.createElement(\u0026#39;textarea\u0026#39;) textArea.setAttribute(\u0026#39;style\u0026#39;,\u0026#39;width:1px;border:0;opacity:0;\u0026#39;) document.body.appendChild(textArea) textArea.value = target.innerHTML textArea.select() document.execCommand(\u0026#39;copy\u0026#39;) document.body.removeChild(textArea) } var pres = document.querySelectorAll(\u0026#34;.comment-body \u0026gt; pre\u0026#34;) pres.forEach(function(pre){ var button = document.createElement(\u0026#34;button\u0026#34;) button.className = \u0026#34;btn btn-sm\u0026#34; button.innerHTML = \u0026#34;copy\u0026#34; pre.parentNode.insertBefore(button, pre) button.addEventListener(\u0026#39;click\u0026#39;, function(e){ e.preventDefault() copy(pre.childNodes[0]) }) }) Rendering mathematical equations Step 1: Create layouts/partials/extend_head.html file with the following content:\n1 2 3 4 5 6 {{ if or .Params.math .Site.Params.math }} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css\u0026#34; integrity=\u0026#34;sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js\u0026#34; integrity=\u0026#34;sha384-g7c+Jr9ZivxKLnZTDUhnkOnsh30B4H0rpLUpJ4jAIKs4fnJI+sEnkvrMWph2EDg4\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js\u0026#34; integrity=\u0026#34;sha384-mll67QQFJfxn0IYznZYonOWZ644AWYC+Pt2cHqMaRhXVrursRwvLnLaebdGIlYNa\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; onload=\u0026#34;renderMathInElement(document.body);\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{ end }} Step 2: add the parameter in order to enable MathJax on config.yml as follows:\n1 2 params: math: true Examples\n1 2 3 4 5 **The Cauchy-Schwarz Inequality** $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ The following example show the quadratic equation. $$x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}$$ Rendered as\nThe Cauchy-Schwarz Inequality\n$$\\left( \\sum_{k=1}^n a_k b_k\\right)^2 \\leq\\left( \\sum_{k=1}^n a_k^2\\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\nThe following example show the quadratic equation. $$x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}$$\nLoading an image in MarkDown 1 ![Alt text of image](/images/example1.jpg) rendered as\nAdd #center after image to center align an image\n1 ![Alt text of image](/images/example1.jpg#center) rendered as followed\nLists in MarkDown Itemized list on Markdown:\n1 2 3 4 5 - Item 1 - Item 2 - sub item 1 - sub item 2 - Item 3 Rendered as:\nItem 1 Item 2 sub item 1 sub item 2 Item 3 Numbered list on Markdown:\n1 2 3 4 5 1. Item 1 1. Item 2 1. sub item 1 1. sub item 2 1. Item 3 Item 1 Item 2 sub item 1 sub item 2 Item 3 Notes about Hugo Use hugo server -D to open a local server which renderes drafts. By default, hugo organizes posts by date.\nIf you want to override that provide the weight: \u0026lt;int\u0026gt; on the front-matter. The smaller the \u0026lt;int\u0026gt; the higher the article in the list. I have provided the value 99 for this article.\nUse at least H2 on the title headings. H1 headings do not show on the Table of Content. Take note.\nPossible Problems you will run into in Hugo and how to self them Problem 1: Module \u0026ldquo;PaperMod\u0026rdquo; is not compatible with this Hugo version; run \u0026ldquo;hugo mod graph\u0026rdquo; for more information.\nSolution 1: Hugo is probably outdated. Updated it by installing the latest version . You can install the downloaded .deb file by running\n1 sudo dpkg --install \u0026lt;path_to_the_deb_file\u0026gt; Conclusion Notes for self\n","permalink":"https://kipronokoech.github.io/posts/notes-for-markdown-and-hugo/","summary":"\u003ch2 id=\"some-markdown-syntax\"\u003eSome MarkDown Syntax\u003c/h2\u003e\n\u003ch3 id=\"working-with-urls-on-markdown\"\u003eWorking with URLs on MarkDown\u003c/h3\u003e\n\u003cp\u003eSome URL\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-MarkDown\" data-lang=\"MarkDown\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSome link [\u003cspan style=\"color:#f92672\"\u003eLink to Unsplash\u003c/span\u003e](\u003cspan style=\"color:#a6e22e\"\u003ehttps://unsplash.com/@chelseanscott?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eRendered as\u003c/p\u003e\n\u003cp\u003eSome link \u003ca href=\"https://unsplash.com/@chelseanscott?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\" target=\"_blank\"\u003e\n  Link to Unsplash\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eUse HTML code if you want to open link on a new tab. Here is an example.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-HTML\" data-lang=\"HTML\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003ea\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehref\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://unsplash.com\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etarget\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;_blank\u0026#34;\u003c/span\u003e\u0026gt; Link2\u0026lt;\u003cspan style=\"color:#f92672\"\u003ea\u003c/span\u003e/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch3 id=\"rendering-code-on-markdown\"\u003eRendering code on MarkDown\u003c/h3\u003e\n\u003cp\u003eThe Code can be rendered using the the following Syntax.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Markdown\" data-lang=\"Markdown\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u0026lt;language\u0026gt; (use 3 `\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(some code here)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e` (use 3 `\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eHere is some Python code\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e11\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e12\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e13\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e14\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e15\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e16\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e17\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e18\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e19\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e20\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e21\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e22\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e23\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e24\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e25\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e26\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e27\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e28\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e29\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e30\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e31\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e32\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e33\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e34\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e35\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e36\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e37\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-Python\" data-lang=\"Python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e psycopg2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edata_folder \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;clean_data/August\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e os \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e pandas \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e pd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e numpy \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e np\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Establishing the connection\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econn \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e psycopg2\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003econnect(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   database\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kiprono_database2\u0026#34;\u003c/span\u003e, user\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e, password\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;pass1\u0026#39;\u003c/span\u003e, host\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;127.0.0.1\u0026#39;\u003c/span\u003e, port\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;5432\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Setting auto commit false\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econn\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eautocommit \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#Creating a cursor object using the cursor() method\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecursor \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e conn\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecursor()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efiles \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e os\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003elistdir(data_folder)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprint(files)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e file \u003cspan style=\"color:#f92672\"\u003ein\u003c/span\u003e files:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   df \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e pd\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eread_csv(os\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003epath\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ejoin(data_folder, file))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   df \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e df[[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;wmoID\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;kmdID\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Year\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Month\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Day\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Hour\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;AirTemp\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Tmax\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Tmin\u0026#39;\u003c/span\u003e]]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   data \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e df\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eto_dict(orient\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;records\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e data_point \u003cspan style=\"color:#f92672\"\u003ein\u003c/span\u003e data:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e list(data_point\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evalues())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      insert_command \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#39;\u0026#39;INSERT INTO AMSS(wmoID, kmdID, Year, Month, Day, Hour, AirTemp, Tmax, Tmin)\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       VALUES (\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e)\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         cursor\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eexecute(insert_command, result)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#75715e\"\u003e# Commit your changes in the database\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         conn\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecommit()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#66d9ef\"\u003eexcept\u003c/span\u003e psycopg2\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eerrors\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eUniqueViolation \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         print(e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#66d9ef\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Closing the connection\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econn\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eclose()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eMore code on CSS\u003c/p\u003e","title":"Notes on Hugo and Markdown"},{"content":"Downloadable CV My current curriculum vitae can be downloaded or viewed from here.\nSkills The following lists highlight some of my skills in Data Science.\nData Science and Statistics Machine learning Deep learning Exploratory data analysis Data visualization Web scraping Data analysis Database Management Data wrangling Programming and Tools Python and R MySQL Git VC LaTeX Microsoft Office TensorFlow and Sklearn Scrapy and Selenium Tableau and Matplotlib Work History SunKing Limited Data Scientist,\nA brief: Building and deploying models at scale using Python, SQL, and AWS to drive the efficiency in sales of solar products on loan and consequent repayment of loans. My team works on both Machine Learning and Deep Learning. Nairobi, Kenya Jan 2023 - Kenya Meteorological Deparment (KMD) Data Science Intern,\nA brief: Working on techniques to improve weather forecasting. Techniques implemented include machine learning, testing new parameterization schemes and optimization of data assimilation procedures. Nairobi, Kenya Apr - Oct, 2022 Science of Intelligence Reseach Fellow,\nA brief: Worked on a computer vision project at Technische Universität Berlin. Berlin, Germany Feb-Aug 2021 PACT-Timiza Data Assistant,\nA brief: Data entry, management and analysis role involving HIV patients information aimed to improve adherence to anti-retroviral drugs. Migori, Kenya 2013-2017 Education Stellenbosch University Certificate: Master's Degree in Applied Mathematics (Data Science) Supervisor: Dr. Bubacarr Bah Full scholarship by African Institute for Mathematical Sciences, (AIMS) Cape Town, South Africa 2020-2022 Stellenbosch University Certificate: Master's Degree in Mathematical Sciences, Cum Laude Supervisor: Dr. Bubacarr Bah Full scholarship by African Institute for Mathematical Sciences, (AIMS) Cape Town, South Africa 2019-2020 Jomo Kenyatta University of Agriculture and Technology Certificate: Bachelors Degree in Science (Statistics), First Class Honors Nairobi, Kenya 2013-2017 Award and Honors Dedicated service award, for sterling performance at Sun King(November 2023)\n. Golden Key Award, for being among the top 15% academic performers among the 2019 cohort (2020-2022)\n. African Institute for Mathematical Sciences(AIMS) Scholarship, for MSc Mathematics at S.U (2019-2010)\u0026(2020-2021)\n. Award for Excellence, African Institute for Mathematical Sciences(AIMS) (Jan 2019- Nov 2019)\n. Vice-Chancellor’s Academic Award, the best student in Bachelor of Science (Statistics option) (2014/2015, 2015/2016 and 2016/2017 academic years)\n. First place, Mathematics contest with 1954 contestants (2012)\n. Now I am currently:\nWorking as a Data Scientist at Sun King Limited, Reading the book \u0026ldquo;The 12 Week Year\u0026rdquo; by Brian P. Moral and Michael Lennington. Up-skilling - currently working on AWS Machine Learning Specialization Writing Data Science articles on Medium , Towards Data Science and Posts section of this site. Mentoring two Data Analysts. ","permalink":"https://kipronokoech.github.io/about-me/","summary":"About Me","title":"About Me"},{"content":"Not doing anything now\n","permalink":"https://kipronokoech.github.io/blog/","summary":"blog","title":"Blog"}]